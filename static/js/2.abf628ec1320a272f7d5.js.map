{"version":3,"sources":["webpack:///src/admin/products/productDetailEditor.vue","webpack:///./src/admin/products/productDetailEditor.vue?8f42","webpack:///./src/admin/products/productDetailEditor.vue","webpack:///src/admin/products/productsManage.vue","webpack:///./src/admin/products/productsManage.vue?7981","webpack:///./src/admin/products/productsManage.vue","webpack:///./node_modules/wangeditor/release/wangEditor.js"],"names":["productDetailEditor","name","mixins","website","props","productDetail","Object","components","mounted","this","_queryproductsSorts","wangEditer","watch","handler","val","oldval","console","log","deep","data","activeTabName","total","editor","productsSorts","queryCondition","pro_name","productSort","currentPage","pageSize","tableData","id","productClassfiy","Introduction","methods","submitProductDetail","_this","$axios","post","BASE_URL","then","response","status","$message","message","type","editorContent","queryProductlist","showClose","catch","error","cancel","_this2","wangEditor_default","a","$refs","editorElem","customConfig","zIndex","uploadImgShowBase64","onchange","html","catchData","menus","create","txt","products_productDetailEditor","render","_vm","_h","$createElement","_c","_self","ref","attrs","model","label-width","label","value","callback","$$v","$set","expression","_v","placeholder","_l","item","index","key","staticStyle","text-align","plain","on","click","staticRenderFns","admin_products_productDetailEditor","__webpack_require__","normalizeComponent","ssrContext","productsManage","href","productClassfiyId","description","get","params","selectList","addProduct","handleEdit","row","content","handleDelete","_this3","productsSortChange","handleSizeChange","handleCurrentChange","getTenHeaderRowName","_ref","rowIndex","_this4","E","products_productsManage","staticClass","icon","size","float","inline","change","width","highlight-current-row","border","height","header-row-class-name","prop","align","scopedSlots","_u","fn","scope","fit","lazy","src","$event","$index","layout","page-sizes","current-page","page-size","size-change","current-change","productsManage_Component","productsManage_normalizeComponent","__webpack_exports__","factory","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","div","nodeType","selectorResult","Array","replace","trim","indexOf","document","createElement","innerHTML","children","result","querySelectorAll","length","i","$","prototype","constructor","forEach","elem","call","clone","cloneList","push","cloneNode","first","last","types","split","addEventListener","e","target","matches","off","removeEventListener","attr","getAttribute","setAttribute","addClass","className","arr","filter","join","removeClass","css","currentStyle","style","resultArr","map","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","fontNames","colors","emotions","title","alt","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","test","isIE","window","objForEach","obj","hasOwnProperty","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","menu","opt","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$trs","trLength","tr","locationData","$currentTr","newTr","trData","tdIndex","$currentTd","toLowerCase","$table","textValId","width30","width50","width100","delBtn","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","tabsConfig","fileElem","fileList","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","keyCode","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","now","Date","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","img","onload","onerror","onabort","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","onreadystatechange","readyState","responseText","JSON","parse","customInsert","errno","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","_initConfig","assign","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","currentHtml","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName","wangEditor","module","exports"],"mappings":"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","file":"static/js/2.abf628ec1320a272f7d5.js","sourcesContent":["<template>\n  <div >\n              <div>\n                <el-form ref=\"form\" :model=\"productDetail\" label-width=\"80px\">\n                    <el-form-item label=\"产品名称\" >\n                      <el-input v-model=\"productDetail.pro_name\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"产品分类\">\n                      <el-select v-model=\"productDetail.productClassfiyId\" placeholder=\"请选择产品类别\">\n                        <el-option v-for=\"(item,index) in productsSorts\" :label=\"item.productClassfiy\" :value=\"item.id\" :key=\"index\"></el-option>\n                      </el-select>\n                    </el-form-item>\n                    <el-form-item label=\"产品简介\">\n                      <el-input v-model=\"productDetail.Introduction\"></el-input>\n                    </el-form-item>\n                  </el-form>\n              </div>\n              <div id=\"wangeditor\">\n                <div ref=\"editorElem\" style=\"text-align:left;\"></div>\n              </div>\n              <el-button type=\"primary\" plain @click=\"submitProductDetail\">确定</el-button>\n              <el-button type=\"primary\" plain @click=\"cancel\">取消</el-button>\n\n  </div>\n</template>\n<script>\nimport E from \"wangeditor\";\nimport website from \"@/mixins/website\";\nexport default {\n    name: 'productDetailEditor',\n    mixins:[website],\n    props:{\n       productDetail:Object,\n    },\n    components: {},\n    mounted () {\n        this._queryproductsSorts();\n        this.wangEditer();          //创建富文本实例\n    },\n    watch:{\n        productDetail:{\n        handler:function(val,oldval){\n          console.log('')\n          this.wangEditer();\n        },\n        deep:true                   //对象内部的属性监听，也叫深度监听\n      },\n\n    },\n    data(){\n        return{\n            activeTabName:'firstTab',\n            total:0,\n            editor: null,\n         //   editorContent: '',\n            productsSorts:[],\n            queryCondition:{\n              pro_name:'',\n              productSort:'',\n              currentPage:1,\n              pageSize:5,\n            },\n            tableData: [{\n              id:'',\n              pro_name:'暂时无数据',\n              productClassfiy:'',\n              Introduction:'暂无数据',\n            },]\n        }\n    },\n    methods:{\n      //提交详情-新建/修改\n      submitProductDetail(){\n        console.log('添加产品上传参数',this.productDetail);\n        this.$axios.post(this.BASE_URL+'/admin/products/addProduct',this.productDetail)\n         .then((response)=>{\n            console.log('新建---',response);\n            if( response.data.status===0){\n               this.$message({\n                  message: '新产品添加成功！',\n                  type: 'success'\n                });\n                //添加成功后，数据置空\n                this.productDetail={\n                    pro_name:'',\n                    productClassfiy:'',\n                    editorContent:'',\n                    Introduction:'',\n                  }\n                this.queryProductlist(); //发送\n            }else{\n               this.$message({\n                showClose: true,\n                message: '新产品上传失败！',\n                type: 'error'\n              });\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n      },\n      cancel(){\n\n      },\n      wangEditer(){\n          console.log('获取不到值2？？？',this.productDetail)\n\n          this.editor = new E(this.$refs.editorElem);\n          this.editor.customConfig.zIndex = 100;\n          //this.editor.customConfig.uploadImgServer = '/upload';     // 上传图片到服务器\n          this.editor.customConfig.uploadImgShowBase64 = true;        // 使用 base64 保存图片\n          // 编辑器的事件，每次改变会获取其html内容\n          this.editor.customConfig.onchange = html => {\n          this.productDetail.editorContent = html;\n          this.catchData(this.productDetail.editorContent);           // 把这个html通过catchData的方法传入父组件\n          };\n          this.editor.customConfig.menus = [\n            // 菜单配置\n            'head',          // 标题\n            'bold',          // 粗体\n            'fontSize',      // 字号\n            'fontName',      // 字体\n            'italic',        // 斜体\n            'underline',     // 下划线\n            'strikeThrough', // 删除线\n            'foreColor',     // 文字颜色\n            'backColor',     // 背景颜色\n            'link',          // 插入链接\n            'list',          // 列表\n            'justify',       // 对齐方式\n            'quote',         // 引用\n            'emoticon',      // 表情\n            'image',         // 插入图片\n            'table',         // 表格\n            'code',          // 插入代码\n            'undo',          // 撤销\n            'redo'           // 重复\n          ];\n          this.editor.create(); // 创建富文本实例\n          console.log('实例后能访问？、this.productDetail.editorContent',this.productDetail.editorContent)\n           this.editor.txt.html(this.productDetail.editorContent);\n         // this.editor.txt.html('请在这里编辑');\n      },\n\n    },\n}\n</script>\n<style scope >\n .title{\n   background: #FFFFFF;\n   width: 100%;\n   height:45px;\n  }\n  .p{\n   float:left;\n   margin:0px;\n   font-size:16px;\n   font-weight:bold;\n  }\n  .content{\n   margin:0px;\n   padding: 0%;\n  }\n\n  .el-popper{\n     z-index: 999999;\n  }\n  .tableStyle .tableStyle-header th{\n        border-right: solid 1px #BED0EC;\n        background-color: #56A9FF;\n        text-align: center;\n        color:#FFFFFF;\n        box-shadow: 5px 5px 5px 2px rgba(0,0,0,0.1);\n    }\n  .tableStyle .tableStyle-row td{\n        font-family: 'MicrosoftYaHei';\n        font-size: 16px;\n        border-bottom: solid 1px #BED0EC;\n        border-right: solid 1px #BED0EC;\n        text-align: center;\n        padding: 2px 0;\n    }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/admin/products/productDetailEditor.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.productDetail,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"产品名称\"}},[_c('el-input',{model:{value:(_vm.productDetail.pro_name),callback:function ($$v) {_vm.$set(_vm.productDetail, \"pro_name\", $$v)},expression:\"productDetail.pro_name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"产品分类\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择产品类别\"},model:{value:(_vm.productDetail.productClassfiyId),callback:function ($$v) {_vm.$set(_vm.productDetail, \"productClassfiyId\", $$v)},expression:\"productDetail.productClassfiyId\"}},_vm._l((_vm.productsSorts),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item.productClassfiy,\"value\":item.id}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"产品简介\"}},[_c('el-input',{model:{value:(_vm.productDetail.Introduction),callback:function ($$v) {_vm.$set(_vm.productDetail, \"Introduction\", $$v)},expression:\"productDetail.Introduction\"}})],1)],1)],1),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"wangeditor\"}},[_c('div',{ref:\"editorElem\",staticStyle:{\"text-align\":\"left\"}})]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"plain\":\"\"},on:{\"click\":_vm.submitProductDetail}},[_vm._v(\"确定\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"plain\":\"\"},on:{\"click\":_vm.cancel}},[_vm._v(\"取消\")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-32a2331a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/admin/products/productDetailEditor.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-32a2331a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./productDetailEditor.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./productDetailEditor.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./productDetailEditor.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-32a2331a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./productDetailEditor.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/admin/products/productDetailEditor.vue\n// module id = null\n// module chunks = ","<template>\n  <div >\n     <!--产品管理-->\n     <el-tabs type=\"border-card\" v-model=\"activeTabName\" >\n        <el-tab-pane label=\"产品管理列表\" name=\"firstTab\">\n                <div class='title'>\n                    <p class='p'><i class=\"el-icon-s-management\"></i>&nbsp;产品管理列表</p>\n                    <el-button type=\"primary\" plain @click=\"addProduct\" icon=\"el-icon-plus\" size=\"mini\">\n                               添加产品</el-button>\n                </div>\n                 <el-divider></el-divider>\n                <div class='content'>\n                      <el-form :inline=\"true\" v-model=\"queryCondition\" style=\"float:left\" size=\"mini\">\n                        <el-form-item label=\"产品类别\">\n                          <el-select v-model=\"queryCondition.productClassfiyId\" placeholder=\"请选择产品类别\">\n                            <el-option v-for=\"(item,index) in productsSorts\" :label=\"item.productClassfiy\" :value=\"item.id\"\n                                       @change=\"productsSortChange\" :key=\"index\"></el-option>\n                          </el-select>\n                        </el-form-item>\n                        <el-form-item>\n                          <el-button type=\"primary\" @click=\"queryProductlist\">查询</el-button>\n                        </el-form-item>\n                      </el-form>\n\n                     <div class=\"tableStyle\">\n                        <el-table :data=\"tableData\" style=\"width: 100%\" ref=\"table\"  highlight-current-row\n                                   border  height=\"410\" size=\"mini\" :header-row-class-name=\"getTenHeaderRowName\">\n                          <el-table-column label=\"产品ID\"  prop=\"id\" align=\"center\" width=\"70\"></el-table-column>\n                          <el-table-column label=\"产品名称\" prop=\"pro_name\" align=\"center\" width=\"250\"></el-table-column>\n                          <el-table-column label=\"产品分类\" prop=\"productClassfiy\" align=\"center\" width=\"120\"></el-table-column>\n                          <el-table-column label=\"产品简介\" prop=\"description\" align=\"center\"></el-table-column>\n                          <el-table-column label=\"缩略图\" prop=\"href\" width=\"200\">\n                            <template slot-scope=\"scope\">\n                              <el-image   style=\"width:180px; height:80px\"  fit=\"scale-down\" lazy\n                                          :src=\"href+scope.row.href\" >\n                              </el-image>\n                            </template>\n                          </el-table-column>\n                          <el-table-column label=\"操作\" width=\"156\">\n                            <template slot-scope=\"scope\">\n                              <el-button size=\"mini\" type=\"primary\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                              <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n                            </template>\n                          </el-table-column>\n                        </el-table>\n                     </div>\n\n                      <el-pagination layout=\"total, sizes, prev, pager, next, jumper\" :page-sizes=\"[5, 10, 15, 20]\"\n                          @size-change=\"handleSizeChange\"\n                          @current-change=\"handleCurrentChange\"\n                          :current-page=\"queryCondition.currentPage\"\n                          :page-size='queryCondition.pageSize'\n                          :total='total'>\n                        </el-pagination>\n                  </div>\n        </el-tab-pane>\n\n        <!--详情编辑-->\n        <el-tab-pane label=\"产品详情\" name=\"secondTab\">\n            <productDetailEditor :productDetail=\"productDetail\"></productDetailEditor>\n        </el-tab-pane>\n      </el-tabs>\n\n\n  </div>\n</template>\n<script>\nimport website from \"@/mixins/website\";\nimport productDetailEditor from \"./productDetailEditor\";\nexport default {\n    name: 'productsManage',\n    mixins:[website],\n    components: {productDetailEditor},\n\n    mounted () {\n          this._queryproductsSorts();\n          this.queryProductlist();\n    },\n    data(){\n        return{\n            activeTabName:'firstTab',\n            total:0,\n            editor: null,\n            href:this.BASE_URL+'/images/products/',\n            productDetail:{\n              pro_name:'',\n              productClassfiyId:'',\n              description:'',\n              editorContent:'',\n            },\n            productsSorts:[],\n            queryCondition:{               //查询条件\n              currentPage:1,\n              pageSize:5,\n              productClassfiyId:'',\n            },\n            tableData: [{\n              id:'',\n              pro_name:'暂时无数据',\n              productClassfiy:'',\n              description:'暂无数据',\n            },]\n        }\n    },\n    methods:{\n      queryProductlist(){\n        console.log('产品列表查询条件',this.queryCondition)\n        this.$axios.get(this.BASE_URL+'/admin/products/queryProductlist',{params:this.queryCondition})\n        .then((response)=>{\n            this.total = response.data.data.total;\n            this.tableData = response.data.data.selectList;\n            console.log('查询产品列表',response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n      },\n      //添加产品-切换tab页面\n      addProduct(){\n        this.activeTabName=\"secondTab\";\n        this.productDetail={\n          pro_name:'',\n          productClassfiyId:'',\n          editorContent:'',\n          description:'',\n        }\n      },\n      //修改产品详情-参数所有数据\n      handleEdit(index,row){\n        console.log('修改某个产品',row)\n        this.activeTabName=\"secondTab\";\n        this.productDetail={\n          pro_name:row.pro_name,\n          productClassfiyId:row.productClassfiyId,\n          description:row.description,\n          editorContent:row.content,\n        }\n        console.log('修改获取行内容赋值', this.productDetail)\n      },\n\n      //提交详情-新建/修改\n      submitProductDetail(){\n        console.log('添加产品上传参数',this.productDetail);\n        this.$axios.post(this.BASE_URL+'/admin/products/addProduct',this .productDetail)\n         .then((response)=>{\n            console.log('新建---',response);\n            if( response.data.status===0){\n               this.$message({\n                  message: '新产品添加成功！',\n                  type: 'success'\n                });\n                //添加成功后，数据置空\n                this.productDetail={\n                    pro_name:'',\n                    productClassfiy:'',\n                    editorContent:'',\n                    Introduction:'',\n                  }\n                this.queryProductlist();\n            }else{\n               this.$message({\n                showClose: true,\n                message: '新产品上传失败！',\n                type: 'error'\n              });\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n      },\n      //删除某个产品\n      handleDelete(index,row){\n         console.log('row',row)\n          this.$axios.get(this.BASE_URL+'/admin/products/deleteProduct/'+row.id)\n           .then((response)=>{\n            console.log('新建---',response);\n            if( response.data.status===0){\n               this.$message({\n                  message: '新产品添加成功！',\n                  type: 'success'\n                });\n                //添加成功后，数据置空\n                this.productDetail={\n                    pro_name:'',\n                    productClassfiy:'',\n                    editorContent:'',\n                    Introduction:'',\n                  }\n                this.queryProductlist();\n            }else{\n               this.$message({\n                showClose: true,\n                message: '新产品上传失败！',\n                type: 'error'\n              });\n            }\n         })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n      },\n      cancel(){\n\n      },\n      //产品类别下拉框改变\n      productsSortChange(){\n        this.queryCondition.currentPage=1;\n        this.queryCondition.pageSize=5;\n      },\n      handleSizeChange(val) {\n        console.log(`每页 ${val} 条`);\n        this.queryCondition.pageSize = val;\n        this.queryProductlist();\n      },\n      handleCurrentChange(val) {\n        console.log(`当前页: ${val}`);\n        this.queryCondition.currentPage = val;\n        this.queryProductlist();\n      },\n      getTenHeaderRowName({ row, rowIndex }) {\n          return 'tableStyle-header'\n      },\n      wangEditer(){\n          this.editor = new E(this.$refs.editorElem);\n          //this.editor.customConfig.uploadImgServer = '/upload';     // 上传图片到服务器\n          this.editor.customConfig.uploadImgShowBase64 = true;        // 使用 base64 保存图片\n          // 编辑器的事件，每次改变会获取其html内容\n          this.editor.customConfig.onchange = html => {\n          this.productDetail.editorContent = html;\n          this.catchData(this.productDetail.editorContent);           // 把这个html通过catchData的方法传入父组件\n          };\n          this.editor.customConfig.menus = [\n            // 菜单配置\n            'head',          // 标题\n            'bold',          // 粗体\n            'fontSize',      // 字号\n            'fontName',      // 字体\n            'italic',        // 斜体\n            'underline',     // 下划线\n            'strikeThrough', // 删除线\n            'foreColor',     // 文字颜色\n            'backColor',     // 背景颜色\n            'link',          // 插入链接\n            'list',          // 列表\n            'justify',       // 对齐方式\n            'quote',         // 引用\n            'emoticon',      // 表情\n            'image',         // 插入图片\n            'table',         // 表格\n            'code',          // 插入代码\n            'undo',          // 撤销\n            'redo'           // 重复\n          ];\n          this.editor.create(); // 创建富文本实例\n      },\n\n    },\n}\n</script>\n<style scoped >\n .title{\n   background: #FFFFFF;\n   width: 100%;\n   height:45px;\n  }\n  .p{\n   float:left;\n   margin:0px;\n   font-size:16px;\n   font-weight:bold;\n  }\n  .content{\n   margin:0px;\n   padding: 0%;\n  }\n  .el-popper{\n     z-index: 999999;\n  }\n  .tableStyle .tableStyle-header th{\n        border-right: solid 1px #BED0EC;\n        background-color: #56A9FF;\n        text-align: center;\n        color:#FFFFFF;\n        box-shadow: 5px 5px 5px 2px rgba(0,0,0,0.1);\n    }\n  .tableStyle .tableStyle-row td{\n        font-family: 'MicrosoftYaHei';\n        font-size: 16px;\n        border-bottom: solid 1px #BED0EC;\n        border-right: solid 1px #BED0EC;\n        text-align: center;\n        padding: 2px 0;\n    }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/admin/products/productsManage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-tabs',{attrs:{\"type\":\"border-card\"},model:{value:(_vm.activeTabName),callback:function ($$v) {_vm.activeTabName=$$v},expression:\"activeTabName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"产品管理列表\",\"name\":\"firstTab\"}},[_c('div',{staticClass:\"title\"},[_c('p',{staticClass:\"p\"},[_c('i',{staticClass:\"el-icon-s-management\"}),_vm._v(\" 产品管理列表\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"plain\":\"\",\"icon\":\"el-icon-plus\",\"size\":\"mini\"},on:{\"click\":_vm.addProduct}},[_vm._v(\"\\n                             添加产品\")])],1),_vm._v(\" \"),_c('el-divider'),_vm._v(\" \"),_c('div',{staticClass:\"content\"},[_c('el-form',{staticStyle:{\"float\":\"left\"},attrs:{\"inline\":true,\"size\":\"mini\"},model:{value:(_vm.queryCondition),callback:function ($$v) {_vm.queryCondition=$$v},expression:\"queryCondition\"}},[_c('el-form-item',{attrs:{\"label\":\"产品类别\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择产品类别\"},model:{value:(_vm.queryCondition.productClassfiyId),callback:function ($$v) {_vm.$set(_vm.queryCondition, \"productClassfiyId\", $$v)},expression:\"queryCondition.productClassfiyId\"}},_vm._l((_vm.productsSorts),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item.productClassfiy,\"value\":item.id},on:{\"change\":_vm.productsSortChange}})}),1)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.queryProductlist}},[_vm._v(\"查询\")])],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"tableStyle\"},[_c('el-table',{ref:\"table\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"highlight-current-row\":\"\",\"border\":\"\",\"height\":\"410\",\"size\":\"mini\",\"header-row-class-name\":_vm.getTenHeaderRowName}},[_c('el-table-column',{attrs:{\"label\":\"产品ID\",\"prop\":\"id\",\"align\":\"center\",\"width\":\"70\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"产品名称\",\"prop\":\"pro_name\",\"align\":\"center\",\"width\":\"250\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"产品分类\",\"prop\":\"productClassfiy\",\"align\":\"center\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"产品简介\",\"prop\":\"description\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"缩略图\",\"prop\":\"href\",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-image',{staticStyle:{\"width\":\"180px\",\"height\":\"80px\"},attrs:{\"fit\":\"scale-down\",\"lazy\":\"\",\"src\":_vm.href+scope.row.href}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"156\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.handleDelete(scope.$index, scope.row)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"layout\":\"total, sizes, prev, pager, next, jumper\",\"page-sizes\":[5, 10, 15, 20],\"current-page\":_vm.queryCondition.currentPage,\"page-size\":_vm.queryCondition.pageSize,\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)],1),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":\"产品详情\",\"name\":\"secondTab\"}},[_c('productDetailEditor',{attrs:{\"productDetail\":_vm.productDetail}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-14dfdca4\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/admin/products/productsManage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-14dfdca4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./productsManage.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./productsManage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./productsManage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-14dfdca4\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./productsManage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-14dfdca4\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/admin/products/productsManage.vue\n// module id = null\n// module chunks = ","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wangeditor/release/wangEditor.js\n// module id = sYY+\n// module chunks = 2"],"sourceRoot":""}